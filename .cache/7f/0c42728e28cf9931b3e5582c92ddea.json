{"id":"js/shader/fragment.glsl","dependencies":[{"name":"C:\\Apache24\\htdocs\\THREEJS-TEST\\package.json","includedInParent":true,"mtime":1610235990120}],"generated":{"js":"module.exports = \"#define GLSLIFY 1\\nuniform float time;\\nuniform float progress;\\nuniform sampler2D texture1;\\nuniform sampler2D texture2;\\nuniform vec2 pixels;\\nuniform vec2 uvRate1;\\nuniform vec2 accel;\\n\\nvarying vec2 vUv;\\nvarying vec2 vUv1;\\nvarying vec4 vPosition;\\n\\nvoid main()\\t{\\n\\tvec2 uv = gl_FragCoord.xy/pixels.xy;\\n\\t\\n\\tfloat p = fract(progress);\\n\\tvec4 fcolor;\\n\\n\\tfloat p1 = p - 1.;\\n\\n\\tvec2 position = step(0.,p)*uv + step(0.,-p)*(1. - uv);\\n\\n\\t// texture 1\\n\\tfloat dx1 = p*0.8;\\n\\tfloat vert = abs(p*0.3);\\n\\tdx1 -= step(0.2 - vert,position.x/2.)*0.3*p;\\n\\tdx1 -= step(0.4 - vert,position.x/2.)*0.3*p;\\n\\tdx1 += step(0.6 - vert,position.x/2.)*0.3*p;\\n\\tdx1 += step(0.8 - vert,position.x/2.)*0.3*p;\\n\\tvec4 tex1 = texture2D(texture1,vec2(vUv1.x + dx1,vUv1.y));\\n\\tfloat bounds = step(0., 1. - (uv.x/2. + p))*step(0., uv.x/2. + p);\\n\\tfcolor = tex1*bounds;\\n\\n\\t// texture 2\\n\\tfloat dx2 = p1*0.8;\\n\\tfloat vert1 = abs(p1*0.3);\\n\\tdx2 -= step(0.2 + vert1,position.x/2.)*0.3*p1;\\n\\tdx2 -= step(0.4 + vert1,position.x/2.)*0.3*p1;\\n\\tdx2 += step(0.6 + vert1,position.x/2.)*0.3*p1;\\n\\tdx2 += step(0.8 + vert1,position.x/2.)*0.3*p1;\\n\\tvec4 tex2 = texture2D(texture2,vec2(vUv1.x + dx2,vUv1.y));\\n\\tfloat bounds1 = step(0., 1. - (uv.x/2. + p1))*step(0., uv.x/2. + p1);\\n\\tfcolor += tex2*bounds1;\\n\\n\\tgl_FragColor = fcolor;\\n\\t// gl_FragColor = vec4(bounds1);\\n\\n}\";"},"sourceMaps":{"js":{"mappings":[{"name":"module","generated":{"line":1,"column":0},"source":"js/shader/fragment.glsl","original":{"line":1,"column":0}},{"generated":{"line":1,"column":6},"source":"js/shader/fragment.glsl","original":{"line":1,"column":6}},{"name":"exports","generated":{"line":1,"column":7},"source":"js/shader/fragment.glsl","original":{"line":1,"column":7}},{"generated":{"line":1,"column":14},"source":"js/shader/fragment.glsl","original":{"line":1,"column":0}},{"generated":{"line":1,"column":17},"source":"js/shader/fragment.glsl","original":{"line":1,"column":15}},{"generated":{"line":1,"column":1383},"source":"js/shader/fragment.glsl","original":{"line":1,"column":0}}],"sources":{"js/shader/fragment.glsl":"module.exports=\"#define GLSLIFY 1\\nuniform float time;\\nuniform float progress;\\nuniform sampler2D texture1;\\nuniform sampler2D texture2;\\nuniform vec2 pixels;\\nuniform vec2 uvRate1;\\nuniform vec2 accel;\\n\\nvarying vec2 vUv;\\nvarying vec2 vUv1;\\nvarying vec4 vPosition;\\n\\nvoid main()\\t{\\n\\tvec2 uv = gl_FragCoord.xy/pixels.xy;\\n\\t\\n\\tfloat p = fract(progress);\\n\\tvec4 fcolor;\\n\\n\\tfloat p1 = p - 1.;\\n\\n\\tvec2 position = step(0.,p)*uv + step(0.,-p)*(1. - uv);\\n\\n\\t// texture 1\\n\\tfloat dx1 = p*0.8;\\n\\tfloat vert = abs(p*0.3);\\n\\tdx1 -= step(0.2 - vert,position.x/2.)*0.3*p;\\n\\tdx1 -= step(0.4 - vert,position.x/2.)*0.3*p;\\n\\tdx1 += step(0.6 - vert,position.x/2.)*0.3*p;\\n\\tdx1 += step(0.8 - vert,position.x/2.)*0.3*p;\\n\\tvec4 tex1 = texture2D(texture1,vec2(vUv1.x + dx1,vUv1.y));\\n\\tfloat bounds = step(0., 1. - (uv.x/2. + p))*step(0., uv.x/2. + p);\\n\\tfcolor = tex1*bounds;\\n\\n\\t// texture 2\\n\\tfloat dx2 = p1*0.8;\\n\\tfloat vert1 = abs(p1*0.3);\\n\\tdx2 -= step(0.2 + vert1,position.x/2.)*0.3*p1;\\n\\tdx2 -= step(0.4 + vert1,position.x/2.)*0.3*p1;\\n\\tdx2 += step(0.6 + vert1,position.x/2.)*0.3*p1;\\n\\tdx2 += step(0.8 + vert1,position.x/2.)*0.3*p1;\\n\\tvec4 tex2 = texture2D(texture2,vec2(vUv1.x + dx2,vUv1.y));\\n\\tfloat bounds1 = step(0., 1. - (uv.x/2. + p1))*step(0., uv.x/2. + p1);\\n\\tfcolor += tex2*bounds1;\\n\\n\\tgl_FragColor = fcolor;\\n\\t// gl_FragColor = vec4(bounds1);\\n\\n}\";"},"lineCount":null}},"error":null,"hash":"555c2604e0f5f7f9d747b1d319307a80","cacheData":{"env":{}}}